[tool.poetry]
# Left empty for now.
name = "Name"
version = "0.1.0"
description = ""
authors = []
license = "MIT"

[tool.poetry.dependencies]
python = "~3.11"
pillow = "~10.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "~2.17"
black = "~23.7"
ruff = "0.0.286"
# Pyright has regressions and fixes every version.
pyright = "1.1.324"
pyodide-py = "~0.23"
pyscript = "~0.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
# 119 makes lines way too long to read.
line-length = 100
target-version = ["py311"]

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.11"
reportUnnecessaryTypeIgnoreComment = true

[tool.ruff]
select = ["ALL"]
ignore = [
    # Self and cls do not require annotations.
    "ANN101", "ANN102",
    # Pyright error codes are obnoxiously long. Ignore lint telling you to use them.
    "PGH003",
    # Documenting every file is a bit redundant for us.
    "D100",
    # No point in documenting magic methods.
    "D105",
    # Makes more sense to use `Parameters` in the main class instead of in the `__init__` .
    "D107",
    # We do not need cryptographically secure random functions.
    "S311",

]
line-length = 100

[tool.ruff.per-file-ignores]
# Ignore unused imports in init, caused by star imports.
# More convenient to provide `__all__` in files instead of duplicating in package __init__.
"__init__.py" = ["F401", "F403", "F405"]
"frontend/main.py" = ["INP001"]

[tool.ruff.pydocstyle]
convention = "numpy"
